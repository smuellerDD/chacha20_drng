Changes 1.3.3
 * fix: increment of the ChaCha20 nonce

Changes 1.3.2
 * move DSO_PUBLIC markers to chacha20_drng.c to prevent cluttering a public
   header file with internal markers
 * drng_chacha20_update now uses only CHACHA20_KEY_SIZE bytes to update the
   ChaCha20 state key. This allows using yet unused random numbers to
   significantly speed up random number generation <= 32 bytes -- speed gain
   up to 30% for 16 bytes random numbers.
 * fix endianess issue on big endian systems

Changes 1.3.1
 * Add MIT license
 * Add handling of buffer that is not aligned to 4 bytes

Changes 1.3.0
 * Add ChaCha20 DRNG self test
 * Bug fix drng_chacha20_alloc: if mlock fails, deallocate memory
 * Update Jitter RNG to version 2.1.0
 * Support multiple noise sources concurrently

Changes 1.2.2
 * Minor changes to compile on embedded systems (thanks to Jason Cooper)

Changes 1.2.1
 * make implementation of chacha20_update faster by using one loop
 * initialize the ChaCha20 key state with a time stamp
 * catch return code of mlock
 * enhance tests

Changes 1.2.0
 * place version macros into the C so that they are private (thanks to Jason Cooper)
 * add license files (thanks to Jason Cooper)
 * change drng_chacha20_versionstring to return the snprintf error (thanks to Jason Cooper)

Changes 1.1.0
 * fix invocation of getrandom syscall
 * remove debug printf
 * use private name space for version macros
 * add API calls to obtain version of implementation

Changes 1.0.0
 * Initial version
